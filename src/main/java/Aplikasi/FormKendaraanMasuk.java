/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplikasi;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author LENOVO
 */
public class FormKendaraanMasuk extends javax.swing.JFrame {
    private void kosongkan_form(){
        txtNoTiket.setEditable(true);
        txtNoTiket.setText(null);
        txtNoPlat.setText(null);
        cbJenis.setSelectedItem(this);
        txtTarif.setText(null);
    }
    
    private void tampilkan_data() {
    DefaultTableModel model = new DefaultTableModel();
    model.addColumn("Nomor");
    model.addColumn("No Tiket");
    model.addColumn("Nomor Plat");
    model.addColumn("Jenis Kendaraan");
    model.addColumn("Tanggal Masuk");
    model.addColumn("Jam Masuk");

    try {
        int no = 1;
        String sql = "SELECT * FROM parkirmasuk WHERE Biaya = 0";
        java.sql.Connection conn = (Connection) Config.configDB();
        java.sql.Statement stm = conn.createStatement();
        java.sql.ResultSet res = stm.executeQuery(sql);

        while (res.next()) {
            model.addRow(new Object[]{
                no++,
                res.getInt("notiket"),
                res.getString("noplat"),
                res.getString("jeniskendaraan"),
                res.getDate("tanggalmasuk"),
                res.getTime("jammasuk")
            });
        }

        tabelDataMasuk.setModel(model);
    } catch (SQLException e) {
        System.out.println("Error: " + e.getMessage());
    }
}
    public void tglskrg(){
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    String formattedDate = sdf.format(new Date());

    // Menetapkan tanggal ke JTextField
    txtTanggalMasuk.setText(formattedDate);

    // Memanggil revalidate() dan repaint() untuk memperbarui antarmuka pengguna
    txtTanggalMasuk.revalidate();
    txtTanggalMasuk.repaint();
    }
    
    private void updateTarif() {
        String selectedJenis = cbJenis.getSelectedItem().toString();
        if (selectedJenis.equals("MOTOR")) {
            txtTarif.setText("1500");
        } else if (selectedJenis.equals("MOBIL")) {
            txtTarif.setText("2000");
        }
    }
    
    
    // Fungsi untuk memeriksa apakah noplat sudah ada dalam database (kecuali untuk baris yang sedang diedit)
    private boolean isNoPlatExists(String noPlat, int notiket) throws SQLException {
    String sql = "SELECT COUNT(*) FROM parkirmasuk WHERE noplat=? AND notiket<>? AND Biaya = 0";
    java.sql.Connection conn = (Connection) Config.configDB();
    java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
    pstm.setString(1, noPlat);
    pstm.setInt(2, notiket);
    java.sql.ResultSet res = pstm.executeQuery();
    res.next();
    return res.getInt(1) > 0;
}
    // Fungsi untuk memeriksa apakah noplat sudah ada dalam database
private boolean isNoPlatExists(String noPlat) throws SQLException {
    String sql = "SELECT COUNT(*) FROM parkirmasuk WHERE noplat=? AND Biaya = 0";
    java.sql.Connection conn = (Connection) Config.configDB();
    java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
    pstm.setString(1, noPlat);
    java.sql.ResultSet res = pstm.executeQuery();
    res.next();
    return res.getInt(1) > 0;
}


    /**
     * Creates new form FormKendaraanMasuk
     */
    public FormKendaraanMasuk() {
        initComponents();
        tampilkan_data();
        kosongkan_form();
        tglskrg();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNoTiket = new javax.swing.JTextField();
        txtNoPlat = new javax.swing.JTextField();
        cbJenis = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelDataMasuk = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtTarif = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btLogout = new javax.swing.JButton();
        btSimpan = new javax.swing.JButton();
        btHapus = new javax.swing.JButton();
        btEdit = new javax.swing.JButton();
        btKeluar = new javax.swing.JButton();
        txtJamMasuk = new javax.swing.JTextField();
        txtTanggalMasuk = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setText("INPUT DATA KENDARAAN");

        jLabel2.setText("No Tiket");

        jLabel3.setText("No Plat");

        jLabel4.setText("Jenis Kendaraan");

        jLabel5.setText("Tanggal  Masuk");

        jLabel6.setText("Jam Masuk");

        txtNoTiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoTiketActionPerformed(evt);
            }
        });

        txtNoPlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoPlatActionPerformed(evt);
            }
        });

        cbJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MOTOR", "MOBIL" }));
        cbJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbJenisActionPerformed(evt);
            }
        });

        tabelDataMasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelDataMasuk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataMasukMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelDataMasuk);

        jLabel7.setText("Tarif");

        jLabel8.setText("/Jam");

        btLogout.setText("Logout");
        btLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogoutActionPerformed(evt);
            }
        });

        btSimpan.setText("Simpan");
        btSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSimpanActionPerformed(evt);
            }
        });

        btHapus.setText("Hapus");
        btHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHapusActionPerformed(evt);
            }
        });

        btEdit.setText("Edit");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        btKeluar.setText("Parkir Keluar");
        btKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btKeluarActionPerformed(evt);
            }
        });

        txtJamMasuk.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtJamMasukFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbJenis, 0, 130, Short.MAX_VALUE)
                                    .addComponent(txtNoPlat)
                                    .addComponent(txtNoTiket))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtJamMasuk, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                .addComponent(txtTanggalMasuk))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtTarif, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btKeluar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoTiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTarif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNoPlat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtJamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbJenis)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTanggalMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLogout)
                    .addComponent(btKeluar)
                    .addComponent(btSimpan)
                    .addComponent(btEdit)
                    .addComponent(btHapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogoutActionPerformed
        // TODO add your handling code here:
        // Tutup FormKendaraanMasuk
    this.dispose();

    // Buka kembali form login
    FormLogin loginForm = new FormLogin();
    loginForm.setVisible(true);
    }//GEN-LAST:event_btLogoutActionPerformed

    private void btKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeluarActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new FormKendaraanKeluar().setVisible(true);
    }//GEN-LAST:event_btKeluarActionPerformed

    private void txtNoPlatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoPlatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoPlatActionPerformed

    private void tabelDataMasukMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMasukMouseClicked
        // TODO add your handling code here:
        
        //Supaya tabel yang ditampilkan bisa diklik dan masuk ke dalam text field
        int baris = tabelDataMasuk.rowAtPoint(evt.getPoint());
        String no_tiket = tabelDataMasuk.getValueAt(baris, 1).toString();
        txtNoTiket.setText(no_tiket);
        
        String plat_nomor = tabelDataMasuk.getValueAt(baris, 2).toString();
        txtNoPlat.setText(plat_nomor);
        
        String jenis_kendaraan = tabelDataMasuk.getValueAt(baris, 3).toString();
        cbJenis.setSelectedItem(jenis_kendaraan);
       
//        String tanggal_masuk = tabelDataMasuk.getValueAt(baris, 4).toString();
//        txtTanggalMasuk.setText(tanggal_masuk);
//        
//        String jam_masuk = tabelDataMasuk.getValueAt(baris, 5).toString();
//        txtJamMasuk.setText(jam_masuk);
    }//GEN-LAST:event_tabelDataMasukMouseClicked

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        // TODO add your handling code here:
        
         int selectedRow = tabelDataMasuk.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit");
        return;
    }

    try {
        // Mengupdate data ke tabel database  
        String sql = "UPDATE parkirmasuk SET notiket=?, noplat=?, jeniskendaraan=? WHERE notiket=? AND Biaya = 0";
        java.sql.Connection conn = (Connection) Config.configDB();
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);

        // Untuk membuat kapital setiap yang dimasukkan kedalam textfield (txtNoPlat)
        String noPlat = txtNoPlat.getText().toUpperCase();

        // Untuk cek duplikasi, ganti parameter pertama dengan notiket yang akan diubah
        int notiketToUpdate = Integer.parseInt(tabelDataMasuk.getValueAt(selectedRow, 1).toString());
        if (isNoPlatExists(noPlat, notiketToUpdate)) {
            JOptionPane.showMessageDialog(this, "Nomor Plat sudah ada. Gunakan nomor plat lain.");
            return;
        }

        // Set parameter for each column
        pstm.setString(1, txtNoTiket.getText());
        pstm.setString(2, noPlat);
        pstm.setString(3, cbJenis.getSelectedItem().toString());

        // Set parameter for the WHERE clause
        pstm.setInt(4, notiketToUpdate);

        // Execute the query
        pstm.executeUpdate();

        JOptionPane.showMessageDialog(null, "Proses Edit Berhasil..");
        tampilkan_data();
        kosongkan_form();
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btEditActionPerformed

    private void btSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimpanActionPerformed
        // TODO add your handling code here:
        
        try {
            //cek kosong pada input data
            if (txtNoTiket.getText().isEmpty() || txtNoPlat.getText().isEmpty() || cbJenis.getSelectedItem() == null || txtTanggalMasuk.getText().isEmpty() || txtJamMasuk.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data Tidak Boleh Kosong.");
            return;
        }
        //memasukkan data ke tabel database    
        String sql = "INSERT INTO parkirmasuk (notiket, noplat, jeniskendaraan, tanggalmasuk, jammasuk) VALUES (?, ?, ?, ?, ?)";
        java.sql.Connection conn = (Connection) Config.configDB();  //untuk menghubungkan ke config
        java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
        
        //untuk membuat kapital setiap yang dimasukkan kedalam textfield (txtNoPlat)
        String noPlat = txtNoPlat.getText().toUpperCase();
        
        //untuk cek duplikasi
        if (isNoPlatExists(noPlat)) {
            JOptionPane.showMessageDialog(this, "Nomor Plat sudah ada");
            return;
        }

        // Set parameter for each column
        pstm.setString(1, txtNoTiket.getText());
        pstm.setString(2, noPlat);
        pstm.setString(3, cbJenis.getSelectedItem().toString());
        pstm.setString(4, txtTanggalMasuk.getText());
        pstm.setString(5, txtJamMasuk.getText());

        // Execute the query
        pstm.execute();

        JOptionPane.showMessageDialog(null, "Proses Penyimpanan Berhasil..");
        tampilkan_data();
        kosongkan_form();
    } catch (HeadlessException | SQLException e) {
        JOptionPane.showMessageDialog(this, e.getMessage());
    }
    }//GEN-LAST:event_btSimpanActionPerformed

    private void btHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHapusActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabelDataMasuk.getSelectedRow();

    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus");
        return;
    }
        
        try
        {
        String sql = "DELETE FROM parkirmasuk WHERE notiket='"+txtNoTiket.getText()+"'";
        java.sql.Connection conn =(Connection) Config.configDB();
            java.sql.PreparedStatement pstm =  conn.prepareStatement(sql);
            pstm.execute();
            JOptionPane.showMessageDialog(null, "Hapus Data Berhasil");
        }
        catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        tampilkan_data();
        kosongkan_form();
    }//GEN-LAST:event_btHapusActionPerformed

    private void txtNoTiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoTiketActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoTiketActionPerformed

    private void cbJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbJenisActionPerformed
        // TODO add your handling code here:
        updateTarif();
    }//GEN-LAST:event_cbJenisActionPerformed

    private void txtJamMasukFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtJamMasukFocusGained
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        String formattedTime = sdf.format(new Date());

        // Menetapkan jam ke JTextField
        txtJamMasuk.setText(formattedTime);

        // Memanggil revalidate() dan repaint() untuk memperbarui antarmuka pengguna
        txtJamMasuk.revalidate();
        txtJamMasuk.repaint();
    }//GEN-LAST:event_txtJamMasukFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormKendaraanMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormKendaraanMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormKendaraanMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormKendaraanMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormKendaraanMasuk().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEdit;
    private javax.swing.JButton btHapus;
    private javax.swing.JButton btKeluar;
    private javax.swing.JButton btLogout;
    private javax.swing.JButton btSimpan;
    private javax.swing.JComboBox<String> cbJenis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelDataMasuk;
    private javax.swing.JTextField txtJamMasuk;
    private javax.swing.JTextField txtNoPlat;
    private javax.swing.JTextField txtNoTiket;
    private javax.swing.JTextField txtTanggalMasuk;
    private javax.swing.JTextField txtTarif;
    // End of variables declaration//GEN-END:variables
}
